name: e2e

on:
  workflow_run:
    workflows:
      - '**'
    types:
      - completed
  pull_request:
    paths:
      - .github/workflows/e2e.yaml

jobs:
  test:
    name: test / ${{ github.event_name }} / ${{ github.event.action }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      actions: read
      checks: read
    steps:
      # https://docs.datadoghq.com/opentelemetry/collector_exporter/deployment/?tab=dockerlocalhost
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Run otel/opentelemetry-collector-contrib
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}
        run: |
          docker run \
            -q \
            -d \
            --name opentelemetry-collector \
            -p 4318:4318 \
            -e DD_API_KEY \
            -v $(pwd)/otel_collector_config.yaml:/etc/otelcol-contrib/config.yaml \
            otel/opentelemetry-collector-contrib:0.109.0
      - name: Wait for otel/opentelemetry-collector-contrib
        timeout-minutes: 1
        run: |
          until curl -sfv http://localhost:4318/v1/metrics
          do
            docker logs opentelemetry-collector
            sleep 10
          done

      - name: Event
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            core.info(`eventName=${context.eventName}`)
            core.info(`sha=${context.sha}`)
            core.info(`ref=${context.ref}`)
            core.info(`actor=${context.actor}`)
            core.info(`payload=${JSON.stringify(context.payload, undefined, 2)}`)
      - uses: int128/trace-workflows-action@0385d5edb2409f3fca0c0dc0efd67af724994422 # v0.20.0
        with:
          oltp-endpoint: http://localhost:4318/v1/trace
